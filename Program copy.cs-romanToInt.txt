using System;
using System.Dynamic;
[AttributeUsage(AttributeTargets.All, AllowMultiple = true)]

class HelpAttribute : System.Attribute
{

  public readonly string url;

  private string topic;

  public string Topic
  {
    get { return topic; }
    set { topic = value; }
  }
  public HelpAttribute(string url)
  {
    this.url = url;

  }

}
// Apply the attribute to a class
[Help("Information on the class MyClass", Topic = "Class Info")]
class MyClass
{
}

namespace ReflectionTest
{


  class ReflectionClass
  {

    static int romanToInt(string x)
    {
var romanToInt = new System.Collections.Generic.Dictionary<char, int>
{
    {'I', 1}, {'V', 5}, {'X', 10}, {'L', 50}, {'C', 100}, {'D', 500}, {'M', 1000}
};
      int result = 0;
      for (int i = 0; i < x.Length; i++)
      {  
        int num1 = romanToInt[x[i]];
        int num2 = i > 0 ? romanToInt[x[i - 1]] : 0;
        Console.WriteLine($"Roman numeral {romanToInt[x[i]]} at position {i} in {x} is being processed.");
        if (i > 0 && romanToInt[x[i]] > romanToInt[x[i - 1]])
        {
          result += romanToInt[x[i]] - 2 * romanToInt[x[i - 1]];
        }
        else
        {
          result += romanToInt[x[i]];
        }
      }
      Console.WriteLine($"Roman numeral {x} converted to integer: {result}");
      return result;
    }


    static void Main(string[] args)
    {
      romanToInt("XIV");
    }
  }
}
